@using Vidly.Models
@model Vidly.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var actionLabel = Model.Customer.Id != 0 ? "Edit" : "Create";
}

<h2>@actionLabel Customer</h2>

@using (Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.Name)
        @Html.TextBoxFor(c => c.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.Name, null, new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.MembershipTypeId)
        @Html.DropDownListFor(c => c.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select membership...", new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.MembershipTypeId, null, new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.Birthdate)
        @Html.TextBoxFor(c => c.Customer.Birthdate, "{0:MM/dd/yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.Birthdate, null, new { @class = "text-danger" })
    </div>
    <div class="form-group form-check">
        @Html.CheckBoxFor(c => c.Customer.IsSubscribedToNewsLetter, new { @class = "form-check-input" })
        @Html.LabelFor(c => c.Customer.IsSubscribedToNewsLetter, "Subscribed to newsletter?", new { @class = "form-check-label" })
    </div>
    @Html.HiddenFor(c => c.Customer.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">@actionLabel Customer</button>

}

@if (Model.Rentals.Any())
{
    <hr />
    <h3>Current Rentals</h3>
    <div class="col-md-4">
        <ul class="list-group">
            @foreach (var rental in Model.Rentals)
            {
                <li class="list-group-item">@rental.Movies.Name <div data-rental-id='@rental.Id' class='ml-1 btn btn-sm btn-secondary return-button'>Return</div></li>
            }
        </ul>
    </div>
        }

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var buttonPress = $(".return-button").click(function () {
            var rentalId = $(this).data("rental-id");

            $.ajax({
                    url: "/api/rentals/" + rentalId,
                    method: "delete"
                })
                .done(function() {
                    toastr.success("Movie returned.");
                    $("div[data-rental-id='" + rentalId + "']").parent().remove();
                })
                .fail(function() {
                    toastr.error("Something unexpected happened.");
                });

        });
    </script>
}
